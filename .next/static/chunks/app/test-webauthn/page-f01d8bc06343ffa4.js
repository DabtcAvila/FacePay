(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[971],{2974:function(e,t,i){Promise.resolve().then(i.bind(i,65221))},65221:function(e,t,i){"use strict";i.r(t),i.d(t,{default:function(){return c}});var r=i(57437),a=i(2265),n=i(45900);let s=e=>({NotAllowedError:"User cancelled or timeout. The user either cancelled the biometric prompt or it timed out. Try again and make sure to complete the biometric authentication.",InvalidStateError:"Authenticator already registered. This device/biometric is already registered for this user. Try signing in instead of registering.",NotSupportedError:"WebAuthn not supported on this device. Your browser or device doesn't support WebAuthn/biometric authentication.",SecurityError:"Security requirements not met. Make sure you're using HTTPS and the domain is properly configured.",ConstraintError:"Constraint error. The authenticator doesn't meet the specified requirements (e.g., platform attachment).",UnknownError:"Unknown error. An unexpected error occurred during the WebAuthn operation.",AbortError:"Operation aborted. The operation was cancelled or aborted.",NetworkError:"Network error. Failed to communicate with the server.",TimeoutError:"Operation timed out. The biometric prompt or server response took too long."})[e.name]||"".concat(e.name,": ").concat(e.message),o=e=>{try{return JSON.stringify(e,null,2)}catch(t){return String(e)}};function c(){let[e,t]=(0,a.useState)(null),[i,c]=(0,a.useState)([{name:"Browser Support Check",status:"pending"},{name:"Platform Authenticator Check",status:"pending"},{name:"Registration Options Request",status:"pending"},{name:"Registration Flow Test",status:"pending"},{name:"Authentication Options Request",status:"pending"},{name:"Authentication Flow Test",status:"pending"}]),[l,d]=(0,a.useState)([]),[u]=(0,a.useState)("test-user-".concat(Date.now())),[h,m]=(0,a.useState)(null),p=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info",i=new Date().toISOString(),r=t.toUpperCase(),a="[".concat(i,"] [").concat(r,"] ").concat(e);d(e=>[...e,a]),console.log(a)},g=(e,t,i,r,a)=>{c(n=>n.map(n=>n.name===e?{...n,status:t,result:i,error:r,details:a,timestamp:new Date}:n))};(0,a.useEffect)(()=>{b()},[]);let b=async()=>{g("Browser Support Check","running"),p("Starting browser support check...");try{let e={navigator:"undefined"!=typeof navigator,credentials:"credentials"in navigator,publicKeyCredential:!!window.PublicKeyCredential,webauthn:"credentials"in navigator&&!!window.PublicKeyCredential,userAgent:navigator.userAgent,platform:navigator.platform,cookieEnabled:navigator.cookieEnabled,onLine:navigator.onLine,language:navigator.language,protocol:window.location.protocol,hostname:window.location.hostname,port:window.location.port,origin:window.location.origin};if(p("Navigator available: ".concat(e.navigator)),p("Credentials API: ".concat(e.credentials)),p("PublicKeyCredential: ".concat(e.publicKeyCredential)),p("WebAuthn supported: ".concat(e.webauthn)),p("Protocol: ".concat(e.protocol)),p("Origin: ".concat(e.origin)),p("User Agent: ".concat(e.userAgent)),!e.webauthn)throw Error("WebAuthn is not supported in this browser");"https:"!==e.protocol&&"localhost"!==e.hostname&&p("WARNING: WebAuthn requires HTTPS or localhost","warn");let i=await n.G.checkBrowserCapabilities();t(i),p("Platform authenticator available: ".concat(i.isPlatformAuthenticatorAvailable)),p("Biometric types: ".concat(i.biometricTypes.join(", "))),p("Device info: ".concat(o(i.deviceInfo))),p("Biometric availability: ".concat(o(i.biometricAvailability))),g("Browser Support Check","success",e),x(i)}catch(e){p("Browser support check failed: ".concat(e.message),"error"),g("Browser Support Check","error",null,e.message)}},x=async e=>{g("Platform Authenticator Check","running"),p("Checking platform authenticator availability...");try{let t=!1,i=!1;if(window.PublicKeyCredential){try{t=await PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable(),p("Platform authenticator available: ".concat(t))}catch(e){p("Error checking platform authenticator: ".concat(e.message),"warn")}try{PublicKeyCredential.isConditionalMediationAvailable?(i=await PublicKeyCredential.isConditionalMediationAvailable(),p("Conditional UI available: ".concat(i))):p("Conditional UI check not available")}catch(e){p("Error checking conditional UI: ".concat(e.message),"warn")}}let r={platformAvailable:t,conditionalAvailable:i,capabilities:e,biometricTypeName:n.G.getBiometricTypeName(e),biometricIcon:n.G.getBiometricIcon(e)};g("Platform Authenticator Check","success",r),p("Platform authenticator check completed successfully"),t||p("WARNING: No platform authenticator available. Biometric authentication will not work.","warn")}catch(e){p("Platform authenticator check failed: ".concat(e.message),"error"),g("Platform Authenticator Check","error",null,e.message)}},f=async()=>{g("Registration Options Request","running"),p("Testing registration options request...");try{var e,t,i,r,a,n;let s=await fetch("/api/webauthn/register/start",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include"}),c=await s.text();if(p("Registration options response status: ".concat(s.status)),p("Registration options response: ".concat(c)),!s.ok)throw Error("HTTP ".concat(s.status,": ").concat(c));let l=JSON.parse(c);if(!l.success||!(null===(e=l.data)||void 0===e?void 0:e.options))throw Error("Invalid response format: ".concat(c));let d=l.data.options,u={hasChallenge:!!d.publicKey.challenge,challengeLength:d.publicKey.challenge.length,hasRP:!!d.publicKey.rp,rpId:d.publicKey.rp.id,hasUser:!!d.publicKey.user,hasAlgorithms:(null===(t=d.publicKey.pubKeyCredParams)||void 0===t?void 0:t.length)>0,algorithms:null===(i=d.publicKey.pubKeyCredParams)||void 0===i?void 0:i.map(e=>e.alg),timeout:d.publicKey.timeout,attestation:d.publicKey.attestation,authenticatorAttachment:null===(r=d.publicKey.authenticatorSelection)||void 0===r?void 0:r.authenticatorAttachment,userVerification:null===(a=d.publicKey.authenticatorSelection)||void 0===a?void 0:a.userVerification,residentKey:null===(n=d.publicKey.authenticatorSelection)||void 0===n?void 0:n.residentKey};p("Registration options validation: ".concat(o(u))),g("Registration Options Request","success",{options:d,validation:u}),p("Registration options request completed successfully")}catch(e){p("Registration options request failed: ".concat(e.message),"error"),g("Registration Options Request","error",null,s(e))}},y=async()=>{g("Registration Flow Test","running"),p("Testing full registration flow...");try{p("Step 1: Getting registration options...");let e=await fetch("/api/webauthn/register/start",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include"});if(!e.ok){let t=await e.text();throw Error("Failed to get registration options: ".concat(t))}let t=(await e.json()).data.options;p("Got registration options: ".concat(o(t.publicKey))),p("Step 2: Creating WebAuthn credential...");let i=Uint8Array.from(atob(t.publicKey.challenge.replace(/-/g,"+").replace(/_/g,"/")),e=>e.charCodeAt(0)),r=Uint8Array.from(atob(t.publicKey.user.id.replace(/-/g,"+").replace(/_/g,"/")),e=>e.charCodeAt(0)),a={publicKey:{challenge:i,rp:t.publicKey.rp,user:{...t.publicKey.user,id:r},pubKeyCredParams:t.publicKey.pubKeyCredParams,timeout:t.publicKey.timeout,attestation:t.publicKey.attestation,authenticatorSelection:{authenticatorAttachment:t.publicKey.authenticatorSelection.authenticatorAttachment,userVerification:t.publicKey.authenticatorSelection.userVerification,residentKey:t.publicKey.authenticatorSelection.residentKey},excludeCredentials:t.publicKey.excludeCredentials||[]}};p("Creating credential with options: ".concat(o(a)));let n=await navigator.credentials.create(a);if(!n)throw Error("No credential returned from navigator.credentials.create()");p("Credential created successfully: ".concat(n.id)),p("Credential type: ".concat(n.type)),p("Credential response type: ".concat(n.response.constructor.name));let s=n.response,c={id:n.id,rawId:btoa(String.fromCharCode(...new Uint8Array(n.rawId))),response:{attestationObject:btoa(String.fromCharCode(...new Uint8Array(s.attestationObject))),clientDataJSON:btoa(String.fromCharCode(...new Uint8Array(s.clientDataJSON)))},type:n.type,clientExtensionResults:n.getClientExtensionResults()};p("Credential prepared for server: ".concat(o(c))),p("Step 3: Verifying credential with server...");let l=await fetch("/api/webauthn/register/complete",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({credential:c}),credentials:"include"}),d=await l.text();if(p("Verification response status: ".concat(l.status)),p("Verification response: ".concat(d)),!l.ok)throw Error("Verification failed: ".concat(d));let u=JSON.parse(d);if(!u.success)throw Error("Verification unsuccessful: ".concat(d));m(c),g("Registration Flow Test","success",{credential:c,verification:u}),p("Registration flow completed successfully!","success")}catch(e){p("Registration flow failed: ".concat(e.message),"error"),p("Error details: ".concat(s(e)),"error"),g("Registration Flow Test","error",null,s(e),e.stack)}},w=async()=>{g("Authentication Options Request","running"),p("Testing authentication options request...");try{var e,t;let i=await fetch("/api/webauthn/authenticate/start",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:u}),credentials:"include"}),r=await i.text();if(p("Authentication options response status: ".concat(i.status)),p("Authentication options response: ".concat(r)),!i.ok)throw Error("HTTP ".concat(i.status,": ").concat(r));let a=JSON.parse(r);if(!a.success||!(null===(e=a.data)||void 0===e?void 0:e.options))throw Error("Invalid response format: ".concat(r));let n=a.data.options,s={hasChallenge:!!n.publicKey.challenge,challengeLength:n.publicKey.challenge.length,timeout:n.publicKey.timeout,rpId:n.publicKey.rpId,userVerification:n.publicKey.userVerification,allowCredentials:(null===(t=n.publicKey.allowCredentials)||void 0===t?void 0:t.length)||0};p("Authentication options validation: ".concat(o(s))),g("Authentication Options Request","success",{options:n,validation:s}),p("Authentication options request completed successfully")}catch(e){p("Authentication options request failed: ".concat(e.message),"error"),g("Authentication Options Request","error",null,s(e))}},v=async()=>{if(g("Authentication Flow Test","running"),p("Testing full authentication flow..."),!h){let e="No registered credential found. Please run registration test first.";p(e,"error"),g("Authentication Flow Test","error",null,e);return}try{p("Step 1: Getting authentication options...");let e=await fetch("/api/webauthn/authenticate/start",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:u}),credentials:"include"});if(!e.ok){let t=await e.text();throw Error("Failed to get authentication options: ".concat(t))}let t=(await e.json()).data.options;p("Got authentication options: ".concat(o(t.publicKey))),p("Step 2: Getting WebAuthn credential...");let i={publicKey:{challenge:Uint8Array.from(atob(t.publicKey.challenge.replace(/-/g,"+").replace(/_/g,"/")),e=>e.charCodeAt(0)),timeout:t.publicKey.timeout,rpId:t.publicKey.rpId,userVerification:t.publicKey.userVerification,allowCredentials:t.publicKey.allowCredentials||[]}};p("Getting credential with options: ".concat(o(i)));let r=await navigator.credentials.get(i);if(!r)throw Error("No credential returned from navigator.credentials.get()");p("Credential retrieved successfully: ".concat(r.id));let a=r.response,n={id:r.id,rawId:btoa(String.fromCharCode(...new Uint8Array(r.rawId))),response:{authenticatorData:btoa(String.fromCharCode(...new Uint8Array(a.authenticatorData))),clientDataJSON:btoa(String.fromCharCode(...new Uint8Array(a.clientDataJSON))),signature:btoa(String.fromCharCode(...new Uint8Array(a.signature))),userHandle:a.userHandle?btoa(String.fromCharCode(...new Uint8Array(a.userHandle))):null},type:r.type,clientExtensionResults:r.getClientExtensionResults()};p("Credential prepared for server: ".concat(o(n))),p("Step 3: Verifying credential with server...");let s=await fetch("/api/webauthn/authenticate/complete",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({credential:n}),credentials:"include"}),c=await s.text();if(p("Verification response status: ".concat(s.status)),p("Verification response: ".concat(c)),!s.ok)throw Error("Verification failed: ".concat(c));let l=JSON.parse(c);if(!l.success)throw Error("Verification unsuccessful: ".concat(c));g("Authentication Flow Test","success",{credential:n,verification:l}),p("Authentication flow completed successfully!","success")}catch(e){p("Authentication flow failed: ".concat(e.message),"error"),p("Error details: ".concat(s(e)),"error"),g("Authentication Flow Test","error",null,s(e),e.stack)}},j=async()=>{p("Starting comprehensive WebAuthn test suite...","info"),c(e=>e.map(e=>({...e,status:"pending",result:void 0,error:void 0,details:void 0,timestamp:void 0}))),d([]),m(null),await b(),await new Promise(e=>setTimeout(e,1e3)),await f(),await new Promise(e=>setTimeout(e,1e3)),await y(),await new Promise(e=>setTimeout(e,1e3)),await w(),await new Promise(e=>setTimeout(e,1e3)),await v(),p("Test suite completed!","info")},N=e=>{switch(e){case"pending":return"⏳";case"running":return"\uD83D\uDD04";case"success":return"✅";case"error":return"❌";default:return"❓"}},A=e=>{switch(e){case"pending":default:return"text-gray-500";case"running":return"text-blue-500";case"success":return"text-green-500";case"error":return"text-red-500"}};return(0,r.jsxs)("div",{className:"container mx-auto p-6 max-w-6xl",children:[(0,r.jsx)("h1",{className:"text-3xl font-bold mb-6",children:"WebAuthn Debug Test Suite"}),(0,r.jsxs)("div",{className:"mb-6",children:[(0,r.jsx)("p",{className:"text-gray-600 mb-4",children:"This comprehensive test suite helps diagnose WebAuthn/biometric authentication issues. Each test provides detailed logging and error information to identify problems."}),(0,r.jsxs)("div",{className:"flex gap-4 mb-4",children:[(0,r.jsx)("button",{onClick:j,className:"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600",children:"Run All Tests"}),(0,r.jsx)("button",{onClick:()=>{d([])},className:"bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600",children:"Clear Logs"})]})]}),(0,r.jsx)("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-8",children:i.map((e,t)=>(0,r.jsxs)("div",{className:"border rounded-lg p-4 bg-white shadow",children:[(0,r.jsxs)("div",{className:"flex items-center justify-between mb-2",children:[(0,r.jsx)("h3",{className:"font-semibold text-sm",children:e.name}),(0,r.jsx)("span",{className:"text-xl ".concat(A(e.status)),children:N(e.status)})]}),(0,r.jsx)("div",{className:"text-sm ".concat(A(e.status)),children:e.status.charAt(0).toUpperCase()+e.status.slice(1)}),e.timestamp&&(0,r.jsx)("div",{className:"text-xs text-gray-500 mt-1",children:e.timestamp.toLocaleTimeString()}),e.error&&(0,r.jsxs)("div",{className:"text-xs text-red-600 mt-2 p-2 bg-red-50 rounded",children:[(0,r.jsx)("strong",{children:"Error:"})," ",e.error]})]},t))}),e&&(0,r.jsxs)("div",{className:"mb-8",children:[(0,r.jsx)("h2",{className:"text-2xl font-bold mb-4",children:"Browser Capabilities"}),(0,r.jsxs)("div",{className:"bg-white border rounded-lg p-4 shadow",children:[(0,r.jsxs)("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:[(0,r.jsxs)("div",{children:[(0,r.jsx)("h3",{className:"font-semibold mb-2",children:"WebAuthn Support"}),(0,r.jsxs)("ul",{className:"text-sm space-y-1",children:[(0,r.jsxs)("li",{children:["Supported: ",e.isSupported?"✅":"❌"]}),(0,r.jsxs)("li",{children:["Platform Authenticator: ",e.isPlatformAuthenticatorAvailable?"✅":"❌"]}),(0,r.jsxs)("li",{children:["Biometric Types: ",e.biometricTypes.join(", ")||"None detected"]})]})]}),(0,r.jsxs)("div",{children:[(0,r.jsx)("h3",{className:"font-semibold mb-2",children:"Device Information"}),(0,r.jsxs)("ul",{className:"text-sm space-y-1",children:[(0,r.jsxs)("li",{children:["Platform: ",e.deviceInfo.platform]}),(0,r.jsxs)("li",{children:["Mobile: ",e.deviceInfo.isMobile?"✅":"❌"]}),(0,r.jsxs)("li",{children:["iOS: ",e.deviceInfo.isIOS?"✅":"❌"]}),(0,r.jsxs)("li",{children:["Android: ",e.deviceInfo.isAndroid?"✅":"❌"]}),(0,r.jsxs)("li",{children:["macOS: ",e.deviceInfo.isMacOS?"✅":"❌"]}),(0,r.jsxs)("li",{children:["Windows: ",e.deviceInfo.isWindows?"✅":"❌"]})]})]})]}),(0,r.jsxs)("div",{className:"mt-4",children:[(0,r.jsx)("h3",{className:"font-semibold mb-2",children:"Biometric Availability"}),(0,r.jsxs)("div",{className:"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-2 text-sm",children:[(0,r.jsxs)("div",{children:["Face ID: ",e.biometricAvailability.faceID?"✅":"❌"]}),(0,r.jsxs)("div",{children:["Touch ID: ",e.biometricAvailability.touchID?"✅":"❌"]}),(0,r.jsxs)("div",{children:["Windows Hello: ",e.biometricAvailability.windowsHello?"✅":"❌"]}),(0,r.jsxs)("div",{children:["Android Face: ",e.biometricAvailability.androidFace?"✅":"❌"]}),(0,r.jsxs)("div",{children:["Android Fingerprint: ",e.biometricAvailability.androidFingerprint?"✅":"❌"]})]})]}),(0,r.jsxs)("div",{className:"mt-4",children:[(0,r.jsx)("h3",{className:"font-semibold mb-2",children:"Recommended Authentication"}),(0,r.jsxs)("p",{className:"text-sm text-gray-600",children:[n.G.getBiometricIcon(e)," ",n.G.getBiometricTypeName(e)]})]})]})]}),(0,r.jsxs)("div",{className:"mb-8",children:[(0,r.jsx)("h2",{className:"text-2xl font-bold mb-4",children:"Individual Tests"}),(0,r.jsxs)("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4",children:[(0,r.jsxs)("button",{onClick:b,className:"p-4 border rounded-lg hover:bg-gray-50 text-left",children:[(0,r.jsx)("h3",{className:"font-semibold",children:"1. Browser Support"}),(0,r.jsx)("p",{className:"text-sm text-gray-600",children:"Check WebAuthn API availability"})]}),(0,r.jsxs)("button",{onClick:f,className:"p-4 border rounded-lg hover:bg-gray-50 text-left",children:[(0,r.jsx)("h3",{className:"font-semibold",children:"2. Registration Options"}),(0,r.jsx)("p",{className:"text-sm text-gray-600",children:"Test server registration endpoint"})]}),(0,r.jsxs)("button",{onClick:y,className:"p-4 border rounded-lg hover:bg-gray-50 text-left",children:[(0,r.jsx)("h3",{className:"font-semibold",children:"3. Registration Flow"}),(0,r.jsx)("p",{className:"text-sm text-gray-600",children:"Full biometric registration test"})]}),(0,r.jsxs)("button",{onClick:w,className:"p-4 border rounded-lg hover:bg-gray-50 text-left",children:[(0,r.jsx)("h3",{className:"font-semibold",children:"4. Auth Options"}),(0,r.jsx)("p",{className:"text-sm text-gray-600",children:"Test server authentication endpoint"})]}),(0,r.jsxs)("button",{onClick:v,className:"p-4 border rounded-lg hover:bg-gray-50 text-left",children:[(0,r.jsx)("h3",{className:"font-semibold",children:"5. Authentication Flow"}),(0,r.jsx)("p",{className:"text-sm text-gray-600",children:"Full biometric authentication test"})]})]})]}),(0,r.jsxs)("div",{className:"mb-8",children:[(0,r.jsx)("h2",{className:"text-2xl font-bold mb-4",children:"Test Results"}),(0,r.jsx)("div",{className:"space-y-4",children:i.filter(e=>e.result||e.error).map((e,t)=>(0,r.jsxs)("div",{className:"bg-white border rounded-lg p-4 shadow",children:[(0,r.jsxs)("div",{className:"flex items-center justify-between mb-2",children:[(0,r.jsx)("h3",{className:"font-semibold",children:e.name}),(0,r.jsxs)("span",{className:A(e.status),children:[N(e.status)," ",e.status]})]}),e.result&&(0,r.jsxs)("div",{className:"mb-2",children:[(0,r.jsx)("h4",{className:"font-medium text-sm text-green-600 mb-1",children:"Result:"}),(0,r.jsx)("pre",{className:"text-xs bg-green-50 p-2 rounded overflow-auto max-h-40",children:o(e.result)})]}),e.error&&(0,r.jsxs)("div",{className:"mb-2",children:[(0,r.jsx)("h4",{className:"font-medium text-sm text-red-600 mb-1",children:"Error:"}),(0,r.jsx)("div",{className:"text-xs bg-red-50 p-2 rounded",children:e.error})]}),e.details&&(0,r.jsxs)("div",{children:[(0,r.jsx)("h4",{className:"font-medium text-sm text-gray-600 mb-1",children:"Details:"}),(0,r.jsx)("pre",{className:"text-xs bg-gray-50 p-2 rounded overflow-auto max-h-40",children:e.details})]})]},t))})]}),(0,r.jsxs)("div",{children:[(0,r.jsx)("h2",{className:"text-2xl font-bold mb-4",children:"Debug Logs"}),(0,r.jsx)("div",{className:"bg-black text-green-400 p-4 rounded-lg font-mono text-xs max-h-96 overflow-auto",children:0===l.length?(0,r.jsx)("div",{className:"text-gray-500",children:"No logs yet. Run tests to see detailed logging information."}):l.map((e,t)=>(0,r.jsx)("div",{className:"mb-1",children:e},t))})]}),(0,r.jsxs)("div",{className:"mt-8 bg-blue-50 border border-blue-200 rounded-lg p-6",children:[(0,r.jsx)("h2",{className:"text-xl font-bold mb-4 text-blue-800",children:"Common Issues & Solutions"}),(0,r.jsxs)("div",{className:"space-y-4 text-sm",children:[(0,r.jsxs)("div",{children:[(0,r.jsx)("h3",{className:"font-semibold text-blue-700",children:"NotSupportedError"}),(0,r.jsx)("p",{children:"WebAuthn not supported. Try Chrome/Safari on a device with biometric sensors (iPhone with Face ID/Touch ID, Mac with Touch ID, Windows with Windows Hello)."})]}),(0,r.jsxs)("div",{children:[(0,r.jsx)("h3",{className:"font-semibold text-blue-700",children:"NotAllowedError"}),(0,r.jsx)("p",{children:"User cancelled or timeout. Make sure to complete the biometric prompt when it appears. Check if biometric authentication is enabled in device settings."})]}),(0,r.jsxs)("div",{children:[(0,r.jsx)("h3",{className:"font-semibold text-blue-700",children:"SecurityError"}),(0,r.jsx)("p",{children:"Security requirements not met. Ensure you're using HTTPS (or localhost for development) and the domain is properly configured."})]}),(0,r.jsxs)("div",{children:[(0,r.jsx)("h3",{className:"font-semibold text-blue-700",children:"InvalidStateError"}),(0,r.jsx)("p",{children:"Authenticator already registered. Try authentication instead, or clear existing credentials and register again."})]}),(0,r.jsxs)("div",{children:[(0,r.jsx)("h3",{className:"font-semibold text-blue-700",children:"No Platform Authenticator"}),(0,r.jsx)("p",{children:"Device doesn't have a built-in biometric sensor or it's disabled. Check device settings for Face ID, Touch ID, Windows Hello, etc."})]})]})]})]})}}},function(e){e.O(0,[216,592,478,560],function(){return e(e.s=2974)}),_N_E=e.O()}]);