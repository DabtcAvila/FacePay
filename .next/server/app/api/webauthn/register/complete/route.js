"use strict";(()=>{var e={};e.id=8187,e.ids=[8187],e.modules={53524:e=>{e.exports=require("@prisma/client")},3473:e=>{e.exports=require("@simplewebauthn/server")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},12781:e=>{e.exports=require("stream")},73837:e=>{e.exports=require("util")},58455:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>I,patchFetch:()=>x,requestAsyncStorage:()=>y,routeModule:()=>h,serverHooks:()=>b,staticGenerationAsyncStorage:()=>v});var i={};t.r(i),t.d(i,{POST:()=>m,dynamic:()=>f});var n=t(49303),a=t(88716),o=t(60670),s=t(13538),c=t(2095),u=t(60172),l=t(3473),d=t(91585),p=t(26033);let f="force-dynamic",g=d.Ry({credential:d.Ry({id:d.Z_(),rawId:d.Z_(),response:d.Ry({attestationObject:d.Z_(),clientDataJSON:d.Z_()}),type:d.i0("public-key"),clientExtensionResults:d.IM(d.Yj()).optional()})});async function m(e){try{let r=await (0,c.mk)(e);if(r.error)return r.error;let t=await e.json(),{credential:i}=g.parse(t),n=await s._.user.findUnique({where:{id:r.user.userId}});if(!n)return(0,c.jl)("User not found",404);if(!n.currentChallenge)return(0,c.jl)("No active registration challenge found. Please restart registration.",400);let a=[process.env.WEBAUTHN_ORIGIN||"http://localhost:3000","https://localhost:3000","http://localhost:3000"];console.log("[WebAuthn Registration Complete] Processing registration completion:",{userId:n.id,email:n.email,credentialId:i.id,timestamp:new Date().toISOString(),userAgent:e.headers.get("user-agent"),origin:e.headers.get("origin"),expectedOrigins:a,expectedRPID:process.env.WEBAUTHN_RP_ID||"localhost",hasChallenge:!!n.currentChallenge});let o=await (0,l.verifyRegistrationResponse)({response:i,expectedChallenge:n.currentChallenge,expectedOrigin:a,expectedRPID:process.env.WEBAUTHN_RP_ID||"localhost",requireUserVerification:!1});if(!o.verified||!o.registrationInfo)return(0,c.jl)("WebAuthn registration verification failed",400);let{credentialID:d,credentialPublicKey:p,counter:f,credentialBackedUp:m,credentialDeviceType:h,userVerified:y}=o.registrationInfo;o.verified&&console.log("[WebAuthn Registration Complete] Registration verification successful:",{userId:n.id,credentialVerified:!0,userVerified:y,credentialDeviceType:h,credentialBackedUp:m});let v={userAgent:e.headers.get("user-agent")||"",platform:"unknown"},b=u.G.validateBiometricAuthentication({credentialDeviceType:h,credentialBackedUp:m,userVerified:y},v);if(!b.isValid)return console.error("[WebAuthn Registration Complete] Biometric validation failed:",{userId:n.id,reason:b.reason,credentialDeviceType:h,credentialBackedUp:m,userVerified:y}),(0,c.jl)(b.reason||"Biometric authentication validation failed",400);if(u.G.logBiometricAuthenticationResult({},n.id,{verified:!0,credentialDeviceType:h,credentialBackedUp:m,userVerified:y}),await s._.webauthnCredential.findUnique({where:{credentialId:Buffer.from(d).toString("base64url")}}))return(0,c.jl)("Credential already registered",409);let[I]=await s._.$transaction([s._.webauthnCredential.create({data:{userId:n.id,credentialId:Buffer.from(d).toString("base64url"),publicKey:Buffer.from(p).toString("base64url"),counter:BigInt(f),transports:["internal"],backedUp:m,deviceType:h},select:{id:!0,credentialId:!0,backedUp:!0,deviceType:!0,createdAt:!0}}),s._.user.update({where:{id:n.id},data:{currentChallenge:null}})]),x=u.G.analyzeBiometricAuthentication({credentialDeviceType:h,credentialBackedUp:m,userVerified:y},v);return await s._.biometricData.create({data:{userId:n.id,type:"webauthn_passkey",data:JSON.stringify({registered:!0,authenticatorType:x.authenticatorType,biometricUsed:x.biometricUsed,deviceType:x.deviceType,credentialType:x.credentialType,platform:x.platformInfo,registrationDate:new Date().toISOString()}),isActive:!0}}),console.log("[WebAuthn Registration Complete] Biometric registration completed successfully:",{userId:n.id,email:n.email,credentialId:Buffer.from(d).toString("base64url"),deviceType:h,backedUp:m,userVerified:y,authenticatorType:x.authenticatorType,biometricUsed:x.biometricUsed,platform:x.platformInfo,timestamp:new Date().toISOString()}),(0,c.x_)({verified:!0,biometricVerified:y,authenticatorType:x.authenticatorType,biometricUsed:x.biometricUsed,credential:{id:I.id,credentialId:I.credentialId,deviceType:I.deviceType,backedUp:I.backedUp,createdAt:I.createdAt},deviceInfo:x.platformInfo,message:"Biometric registration completed successfully - platform authenticator verified"},"WebAuthn biometric registration completed")}catch(r){if(r instanceof p.jm)return console.error("[WebAuthn Registration Complete] Invalid request format:",r.errors),(0,c.jl)("Invalid request format: "+r.errors[0].message,400);return console.error("[WebAuthn Registration Complete] Registration completion failed:",{error:r instanceof Error?r.message:String(r),stack:r instanceof Error?r.stack:void 0,timestamp:new Date().toISOString(),userAgent:e.headers.get("user-agent")}),(0,c.jl)("Failed to complete biometric registration",500)}}let h=new n.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/webauthn/register/complete/route",pathname:"/api/webauthn/register/complete",filename:"route",bundlePath:"app/api/webauthn/register/complete/route"},resolvedPagePath:"/Users/davicho/MASTER proyectos/FacePay/src/app/api/webauthn/register/complete/route.ts",nextConfigOutput:"",userland:i}),{requestAsyncStorage:y,staticGenerationAsyncStorage:v,serverHooks:b}=h,I="/api/webauthn/register/complete/route";function x(){return(0,o.patchFetch)({serverHooks:b,staticGenerationAsyncStorage:v})}},68570:(e,r,t)=>{Object.defineProperty(r,"__esModule",{value:!0}),Object.defineProperty(r,"createProxy",{enumerable:!0,get:function(){return i}});let i=t(51749).createClientModuleProxy},51749:(e,r,t)=>{e.exports=t(23191).vendored["react-rsc"].ReactServerDOMWebpackServerEdge},2095:(e,r,t)=>{t.d(r,{jl:()=>s,mk:()=>o,x_:()=>c});var i=t(87070),n=t(75183),a=t(13538);async function o(e){let r=e.headers.get("authorization"),t=(0,n.oA)(r);if(!t)return{user:null,error:i.NextResponse.json({success:!1,error:"Authorization token required"},{status:401})};let o=(0,n.ez)(t);return o?await a._.user.findUnique({where:{id:o.userId}})?{user:o,error:null}:{user:null,error:i.NextResponse.json({success:!1,error:"User not found"},{status:401})}:{user:null,error:i.NextResponse.json({success:!1,error:"Invalid or expired token"},{status:401})}}function s(e,r=400){return i.NextResponse.json({success:!1,error:e},{status:r})}function c(e,r){return i.NextResponse.json({success:!0,data:e,message:r})}},75183:(e,r,t)=>{t.d(r,{X8:()=>s,ez:()=>c,oA:()=>l,si:()=>u});var i=t(41482),n=t.n(i);let a=process.env.JWT_SECRET||"your-secret-key",o=process.env.JWT_REFRESH_SECRET||"your-refresh-secret-key";function s(e){let r={userId:e.id,email:e.email};return{accessToken:n().sign(r,a,{expiresIn:"15m"}),refreshToken:n().sign(r,o,{expiresIn:"7d"}),expiresIn:900}}function c(e){try{return n().verify(e,a)}catch(e){return null}}function u(e){try{return n().verify(e,o)}catch(e){return null}}function l(e){return e&&e.startsWith("Bearer ")?e.substring(7):null}},13538:(e,r,t)=>{t.d(r,{_:()=>a});var i=t(53524);let n=globalThis,a=n.prisma??=new i.PrismaClient({log:["query"]})},60172:(e,r,t)=>{t.d(r,{G:()=>s});var i=t(68570);let n=(0,i.createProxy)(String.raw`/Users/davicho/MASTER proyectos/FacePay/src/services/webauthn.ts`),{__esModule:a,$$typeof:o}=n;n.default;let s=(0,i.createProxy)(String.raw`/Users/davicho/MASTER proyectos/FacePay/src/services/webauthn.ts#WebAuthnService`)}};var r=require("../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),i=r.X(0,[8948,5972,1482,1585],()=>t(58455));module.exports=i})();