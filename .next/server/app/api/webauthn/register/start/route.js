"use strict";(()=>{var e={};e.id=8464,e.ids=[8464],e.modules={53524:e=>{e.exports=require("@prisma/client")},3473:e=>{e.exports=require("@simplewebauthn/server")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},12781:e=>{e.exports=require("stream")},73837:e=>{e.exports=require("util")},39755:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>f,patchFetch:()=>y,requestAsyncStorage:()=>h,routeModule:()=>p,serverHooks:()=>g,staticGenerationAsyncStorage:()=>m});var s={};r.r(s),r.d(s,{POST:()=>d,dynamic:()=>l});var i=r(49303),n=r(88716),a=r(60670),o=r(13538),u=r(2095),c=r(3473);let l="force-dynamic";async function d(e){try{let t=await (0,u.mk)(e);if(t.error)return t.error;let r=await o._.user.findUnique({where:{id:t.user.userId},include:{webauthnCredentials:!0}});if(!r)return console.error("[WebAuthn Registration] User not found:",t.user.userId),(0,u.jl)("User not found",404);console.log("[WebAuthn Registration] Starting biometric registration for user:",{userId:r.id,email:r.email,existingCredentials:r.webauthnCredentials.length,timestamp:new Date().toISOString(),userAgent:e.headers.get("user-agent")});let s=r.webauthnCredentials.map(e=>({id:e.credentialId,type:"public-key",transports:["internal","hybrid"]})),i=await (0,c.generateRegistrationOptions)({rpName:process.env.WEBAUTHN_RP_NAME||"FacePay",rpID:process.env.WEBAUTHN_RP_ID||"localhost",userID:Buffer.from(r.id,"utf8"),userName:r.email,userDisplayName:r.name||r.email,timeout:6e4,attestationType:"none",excludeCredentials:s,authenticatorSelection:{authenticatorAttachment:"platform",requireResidentKey:!1,userVerification:"preferred"},supportedAlgorithmIDs:[-7,-257]});return console.log("[WebAuthn Registration] Generated options:",{userId:r.id,rpID:i.rp.id,authenticatorAttachment:i.authenticatorSelection?.authenticatorAttachment,userVerification:i.authenticatorSelection?.userVerification,requireResidentKey:i.authenticatorSelection?.requireResidentKey,attestationType:i.attestation,challengeLength:i.challenge.length,hostname:process.env.WEBAUTHN_RP_ID||"localhost",origin:process.env.WEBAUTHN_ORIGIN||"http://localhost:3000",timestamp:new Date().toISOString()}),await o._.user.update({where:{id:r.id},data:{currentChallenge:i.challenge}}),console.log("[WebAuthn Registration] Registration options created successfully:",{userId:r.id,email:r.email,biometricRequired:!0,platformAuthenticator:!0,timestamp:new Date().toISOString()}),(0,u.x_)({options:i,userId:r.id,biometricRequired:!0,platformAuthenticatorRequired:!0,message:"Biometric registration started successfully - platform authenticator required"},"WebAuthn biometric registration started")}catch(t){return console.error("[WebAuthn Registration] Registration start failed:",{error:t instanceof Error?t.message:String(t),stack:t instanceof Error?t.stack:void 0,timestamp:new Date().toISOString(),userAgent:e.headers.get("user-agent")}),(0,u.jl)("Failed to start biometric registration",500)}}let p=new i.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/webauthn/register/start/route",pathname:"/api/webauthn/register/start",filename:"route",bundlePath:"app/api/webauthn/register/start/route"},resolvedPagePath:"/Users/davicho/MASTER proyectos/FacePay/src/app/api/webauthn/register/start/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:h,staticGenerationAsyncStorage:m,serverHooks:g}=p,f="/api/webauthn/register/start/route";function y(){return(0,a.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:m})}},2095:(e,t,r)=>{r.d(t,{jl:()=>o,mk:()=>a,x_:()=>u});var s=r(87070),i=r(75183),n=r(13538);async function a(e){let t=e.headers.get("authorization"),r=(0,i.oA)(t);if(!r)return{user:null,error:s.NextResponse.json({success:!1,error:"Authorization token required"},{status:401})};let a=(0,i.ez)(r);return a?await n._.user.findUnique({where:{id:a.userId}})?{user:a,error:null}:{user:null,error:s.NextResponse.json({success:!1,error:"User not found"},{status:401})}:{user:null,error:s.NextResponse.json({success:!1,error:"Invalid or expired token"},{status:401})}}function o(e,t=400){return s.NextResponse.json({success:!1,error:e},{status:t})}function u(e,t){return s.NextResponse.json({success:!0,data:e,message:t})}},75183:(e,t,r)=>{r.d(t,{X8:()=>o,ez:()=>u,oA:()=>l,si:()=>c});var s=r(41482),i=r.n(s);let n=process.env.JWT_SECRET||"your-secret-key",a=process.env.JWT_REFRESH_SECRET||"your-refresh-secret-key";function o(e){let t={userId:e.id,email:e.email};return{accessToken:i().sign(t,n,{expiresIn:"15m"}),refreshToken:i().sign(t,a,{expiresIn:"7d"}),expiresIn:900}}function u(e){try{return i().verify(e,n)}catch(e){return null}}function c(e){try{return i().verify(e,a)}catch(e){return null}}function l(e){return e&&e.startsWith("Bearer ")?e.substring(7):null}},13538:(e,t,r)=>{r.d(t,{_:()=>n});var s=r(53524);let i=globalThis,n=i.prisma??=new s.PrismaClient({log:["query"]})}};var t=require("../../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[8948,5972,1482],()=>r(39755));module.exports=s})();