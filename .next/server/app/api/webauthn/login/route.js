"use strict";(()=>{var e={};e.id=8470,e.ids=[8470],e.modules={53524:e=>{e.exports=require("@prisma/client")},3473:e=>{e.exports=require("@simplewebauthn/server")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},12781:e=>{e.exports=require("stream")},73837:e=>{e.exports=require("util")},90794:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>x,patchFetch:()=>v,requestAsyncStorage:()=>w,routeModule:()=>g,serverHooks:()=>b,staticGenerationAsyncStorage:()=>y});var n={};t.r(n),t.d(n,{GET:()=>m,POST:()=>f});var i=t(49303),a=t(88716),o=t(60670),s=t(13538),u=t(2095),l=t(75183),c=t(3473),d=t(91585),p=t(26033);let h=d.Ry({email:d.Z_().email("Invalid email address").optional(),credential:d.Ry({id:d.Z_(),rawId:d.Z_(),response:d.Ry({authenticatorData:d.Z_(),clientDataJSON:d.Z_(),signature:d.Z_(),userHandle:d.Z_().optional()}),type:d.i0("public-key"),clientExtensionResults:d.IM(d.Yj()).optional()}),challengeId:d.Z_().optional()});async function f(e){try{let r;let t=await e.json(),{email:n,credential:i,challengeId:a}=h.parse(t),o=await s._.webauthnCredential.findUnique({where:{credentialId:i.id},include:{user:{select:{id:!0,email:!0,name:!0,createdAt:!0,updatedAt:!0}}}});if(!o)return(0,u.jl)("Credential not found. Please register your biometric data first.",404);if(n&&o.user.email!==n)return(0,u.jl)("Credential does not match the provided email",403);try{r=JSON.parse(Buffer.from(i.response.clientDataJSON,"base64url").toString("utf-8")).challenge}catch(e){return(0,u.jl)("Invalid client data format",400)}let d=await (0,c.verifyAuthenticationResponse)({response:i,expectedChallenge:r,expectedOrigin:process.env.WEBAUTHN_ORIGIN||"http://localhost:3000",expectedRPID:process.env.WEBAUTHN_RP_ID||"localhost",authenticator:{credentialID:o.credentialId,credentialPublicKey:Buffer.from(o.publicKey,"base64url"),counter:Number(o.counter)},requireUserVerification:!0});if(!d.verified)return(0,u.jl)("Biometric authentication failed. Please try again.",401);await s._.webauthnCredential.update({where:{id:o.id},data:{counter:d.authenticationInfo.newCounter}});let p=(0,l.X8)(o.user);return await s._.user.update({where:{id:o.user.id},data:{updatedAt:new Date}}),(0,u.x_)({verified:!0,user:{id:o.user.id,email:o.user.email,name:o.user.name},tokens:{accessToken:p.accessToken,refreshToken:p.refreshToken,expiresIn:p.expiresIn},loginMethod:"webauthn_biometric"},"Biometric login successful")}catch(e){if(e instanceof p.jm)return(0,u.jl)(`Validation error: ${e.errors[0].message}`,400);return console.error("WebAuthn biometric login error:",e),(0,u.jl)("Biometric login failed. Please try again or use an alternative login method.",500)}}async function m(e){try{let r;let{searchParams:t}=new URL(e.url),n=t.get("email");if(n){let e=await s._.user.findUnique({where:{email:n},include:{webauthnCredentials:{where:{createdAt:{gte:new Date(Date.now()-2592e6)}}}}});if(!e)return(0,u.jl)("User not found",404);if(0===e.webauthnCredentials.length)return(0,u.jl)("No biometric credentials found. Please register your biometric data first.",404);r=e.webauthnCredentials.map(e=>({id:e.credentialId,type:"public-key",transports:["internal","hybrid"]}))}let i=await (0,c.generateAuthenticationOptions)({timeout:6e4,allowCredentials:r,userVerification:"required",rpID:process.env.WEBAUTHN_RP_ID||"localhost"});return(0,u.x_)({options:i,supportsBiometric:!0},"Authentication options generated for biometric login")}catch(e){return console.error("WebAuthn authentication options error:",e),(0,u.jl)("Failed to generate biometric authentication options",500)}}let g=new i.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/webauthn/login/route",pathname:"/api/webauthn/login",filename:"route",bundlePath:"app/api/webauthn/login/route"},resolvedPagePath:"/Users/davicho/MASTER proyectos/FacePay/src/app/api/webauthn/login/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:w,staticGenerationAsyncStorage:y,serverHooks:b}=g,x="/api/webauthn/login/route";function v(){return(0,o.patchFetch)({serverHooks:b,staticGenerationAsyncStorage:y})}},2095:(e,r,t)=>{t.d(r,{jl:()=>s,mk:()=>o,x_:()=>u});var n=t(87070),i=t(75183),a=t(13538);async function o(e){let r=e.headers.get("authorization"),t=(0,i.oA)(r);if(!t)return{user:null,error:n.NextResponse.json({success:!1,error:"Authorization token required"},{status:401})};let o=(0,i.ez)(t);return o?await a._.user.findUnique({where:{id:o.userId}})?{user:o,error:null}:{user:null,error:n.NextResponse.json({success:!1,error:"User not found"},{status:401})}:{user:null,error:n.NextResponse.json({success:!1,error:"Invalid or expired token"},{status:401})}}function s(e,r=400){return n.NextResponse.json({success:!1,error:e},{status:r})}function u(e,r){return n.NextResponse.json({success:!0,data:e,message:r})}},75183:(e,r,t)=>{t.d(r,{X8:()=>s,ez:()=>u,oA:()=>c,si:()=>l});var n=t(41482),i=t.n(n);let a=process.env.JWT_SECRET||"your-secret-key",o=process.env.JWT_REFRESH_SECRET||"your-refresh-secret-key";function s(e){let r={userId:e.id,email:e.email};return{accessToken:i().sign(r,a,{expiresIn:"15m"}),refreshToken:i().sign(r,o,{expiresIn:"7d"}),expiresIn:900}}function u(e){try{return i().verify(e,a)}catch(e){return null}}function l(e){try{return i().verify(e,o)}catch(e){return null}}function c(e){return e&&e.startsWith("Bearer ")?e.substring(7):null}},13538:(e,r,t)=>{t.d(r,{_:()=>a});var n=t(53524);let i=globalThis,a=i.prisma??=new n.PrismaClient({log:["query"]})}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[8948,5972,1482,1585],()=>t(90794));module.exports=n})();