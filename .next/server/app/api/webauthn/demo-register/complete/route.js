"use strict";(()=>{var e={};e.id=304,e.ids=[304],e.modules={53524:e=>{e.exports=require("@prisma/client")},3473:e=>{e.exports=require("@simplewebauthn/server")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},12781:e=>{e.exports=require("stream")},73837:e=>{e.exports=require("util")},63482:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>A,patchFetch:()=>R,requestAsyncStorage:()=>b,routeModule:()=>h,serverHooks:()=>v,staticGenerationAsyncStorage:()=>y});var i={};t.r(i),t.d(i,{POST:()=>g,dynamic:()=>m});var o=t(49303),n=t(88716),a=t(60670),s=t(13538),c=t(2095),u=t(60172),d=t(3473),l=t(91585),p=t(26033);let m="force-dynamic",f=l.Ry({credential:l.Ry({id:l.Z_(),rawId:l.Z_(),response:l.Ry({attestationObject:l.Z_(),clientDataJSON:l.Z_()}),type:l.i0("public-key"),clientExtensionResults:l.IM(l.Yj()).optional()}),userId:l.Z_()});async function g(e){try{let r=await e.json(),{credential:t,userId:i}=f.parse(r),o=await s._.user.findUnique({where:{id:i}});if(!o)return(0,c.jl)("Demo user not found",404);if(!o.currentChallenge)return(0,c.jl)("No active registration challenge found. Please restart registration.",400);console.log("[WebAuthn Demo Registration Complete] Processing REAL biometric registration completion:",{userId:o.id,email:o.email,credentialId:t.id,timestamp:new Date().toISOString(),userAgent:e.headers.get("user-agent")});let n=await (0,d.verifyRegistrationResponse)({response:t,expectedChallenge:o.currentChallenge,expectedOrigin:process.env.WEBAUTHN_ORIGIN||"http://localhost:3000",expectedRPID:process.env.WEBAUTHN_RP_ID||"localhost",requireUserVerification:!0});if(!n.verified||!n.registrationInfo)return console.error("[WebAuthn Demo Registration Complete] REAL biometric verification FAILED:",{verified:n.verified,registrationInfo:!!n.registrationInfo}),(0,c.jl)("REAL WebAuthn biometric registration verification failed",400);let{credentialID:a,credentialPublicKey:l,counter:p,credentialBackedUp:m,credentialDeviceType:g,userVerified:h}=n.registrationInfo,b={userAgent:e.headers.get("user-agent")||"",platform:"demo"},y=u.G.validateBiometricAuthentication({credentialDeviceType:g,credentialBackedUp:m,userVerified:h},b);if(!y.isValid)return console.error("[WebAuthn Demo Registration Complete] REAL biometric validation failed:",{userId:o.id,reason:y.reason,credentialDeviceType:g,credentialBackedUp:m,userVerified:h}),(0,c.jl)(y.reason||"REAL biometric authentication validation failed",400);if(u.G.logBiometricAuthenticationResult({},o.id,{verified:!0,credentialDeviceType:g,credentialBackedUp:m,userVerified:h}),await s._.webauthnCredential.findUnique({where:{credentialId:Buffer.from(a).toString("base64url")}}))return(0,c.jl)("Credential already registered",409);let[v]=await s._.$transaction([s._.webauthnCredential.create({data:{userId:o.id,credentialId:Buffer.from(a).toString("base64url"),publicKey:Buffer.from(l).toString("base64url"),counter:p,backedUp:m,deviceType:g},select:{id:!0,credentialId:!0,backedUp:!0,deviceType:!0,createdAt:!0}}),s._.user.update({where:{id:o.id},data:{currentChallenge:null}})]),A=u.G.analyzeBiometricAuthentication({credentialDeviceType:g,credentialBackedUp:m,userVerified:h},b);return await s._.biometricData.create({data:{userId:o.id,type:"webauthn_passkey_demo",data:JSON.stringify({registered:!0,authenticatorType:A.authenticatorType,biometricUsed:A.biometricUsed,deviceType:A.deviceType,credentialType:A.credentialType,platform:A.platformInfo,registrationDate:new Date().toISOString(),realWebAuthn:!0,demo:!0}),isActive:!0}}),console.log("[WebAuthn Demo Registration Complete] REAL biometric registration completed successfully:",{userId:o.id,email:o.email,credentialId:Buffer.from(a).toString("base64url"),deviceType:g,backedUp:m,userVerified:h,authenticatorType:A.authenticatorType,biometricUsed:A.biometricUsed,platform:A.platformInfo,realWebAuthn:!0,demo:!0,timestamp:new Date().toISOString()}),(0,c.x_)({verified:!0,biometricVerified:h,authenticatorType:A.authenticatorType,biometricUsed:A.biometricUsed,realWebAuthn:!0,demo:!0,credential:{id:v.id,credentialId:v.credentialId,deviceType:v.deviceType,backedUp:v.backedUp,createdAt:v.createdAt},deviceInfo:A.platformInfo,message:"REAL biometric demo registration completed successfully - platform authenticator verified"},"WebAuthn REAL biometric demo registration completed")}catch(r){if(r instanceof p.jm)return console.error("[WebAuthn Demo Registration Complete] Invalid request format:",r.errors),(0,c.jl)("Invalid request format: "+r.errors[0].message,400);return console.error("[WebAuthn Demo Registration Complete] Registration completion failed:",{error:r instanceof Error?r.message:String(r),stack:r instanceof Error?r.stack:void 0,timestamp:new Date().toISOString(),userAgent:e.headers.get("user-agent")}),(0,c.jl)("Failed to complete REAL biometric demo registration",500)}}let h=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/webauthn/demo-register/complete/route",pathname:"/api/webauthn/demo-register/complete",filename:"route",bundlePath:"app/api/webauthn/demo-register/complete/route"},resolvedPagePath:"/Users/davicho/MASTER proyectos/FacePay/src/app/api/webauthn/demo-register/complete/route.ts",nextConfigOutput:"",userland:i}),{requestAsyncStorage:b,staticGenerationAsyncStorage:y,serverHooks:v}=h,A="/api/webauthn/demo-register/complete/route";function R(){return(0,a.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:y})}},68570:(e,r,t)=>{Object.defineProperty(r,"__esModule",{value:!0}),Object.defineProperty(r,"createProxy",{enumerable:!0,get:function(){return i}});let i=t(51749).createClientModuleProxy},51749:(e,r,t)=>{e.exports=t(23191).vendored["react-rsc"].ReactServerDOMWebpackServerEdge},2095:(e,r,t)=>{t.d(r,{jl:()=>s,mk:()=>a,x_:()=>c});var i=t(87070),o=t(75183),n=t(13538);async function a(e){let r=e.headers.get("authorization"),t=(0,o.oA)(r);if(!t)return{user:null,error:i.NextResponse.json({success:!1,error:"Authorization token required"},{status:401})};let a=(0,o.ez)(t);return a?await n._.user.findUnique({where:{id:a.userId}})?{user:a,error:null}:{user:null,error:i.NextResponse.json({success:!1,error:"User not found"},{status:401})}:{user:null,error:i.NextResponse.json({success:!1,error:"Invalid or expired token"},{status:401})}}function s(e,r=400){return i.NextResponse.json({success:!1,error:e},{status:r})}function c(e,r){return i.NextResponse.json({success:!0,data:e,message:r})}},75183:(e,r,t)=>{t.d(r,{X8:()=>s,ez:()=>c,oA:()=>d,si:()=>u});var i=t(41482),o=t.n(i);let n=process.env.JWT_SECRET||"your-secret-key",a=process.env.JWT_REFRESH_SECRET||"your-refresh-secret-key";function s(e){let r={userId:e.id,email:e.email};return{accessToken:o().sign(r,n,{expiresIn:"15m"}),refreshToken:o().sign(r,a,{expiresIn:"7d"}),expiresIn:900}}function c(e){try{return o().verify(e,n)}catch(e){return null}}function u(e){try{return o().verify(e,a)}catch(e){return null}}function d(e){return e&&e.startsWith("Bearer ")?e.substring(7):null}},13538:(e,r,t)=>{t.d(r,{_:()=>n});var i=t(53524);let o=globalThis,n=o.prisma??=new i.PrismaClient({log:["query"]})},60172:(e,r,t)=>{t.d(r,{G:()=>s});var i=t(68570);let o=(0,i.createProxy)(String.raw`/Users/davicho/MASTER proyectos/FacePay/src/services/webauthn.ts`),{__esModule:n,$$typeof:a}=o;o.default;let s=(0,i.createProxy)(String.raw`/Users/davicho/MASTER proyectos/FacePay/src/services/webauthn.ts#WebAuthnService`)}};var r=require("../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),i=r.X(0,[8948,5972,1482,1585],()=>t(63482));module.exports=i})();