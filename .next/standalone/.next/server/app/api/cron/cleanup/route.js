"use strict";(()=>{var e={};e.id=1843,e.ids=[1843],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},43854:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>y,patchFetch:()=>M,requestAsyncStorage:()=>g,routeModule:()=>D,serverHooks:()=>_,staticGenerationAsyncStorage:()=>k});var s={};a.r(s),a.d(s,{DELETE:()=>w,GET:()=>m,POST:()=>p,PUT:()=>h,dynamic:()=>d});var n=a(49303),r=a(88716),o=a(60670),l=a(87070),c=a(13538),u=a(98682),i=a(53524);let d="force-dynamic";async function p(e){let t=Date.now();try{if(!function(e){let t=e.headers.get("authorization"),a=process.env.CRON_SECRET||process.env.WEBHOOK_SECRET;return!!t&&!!a&&t.replace("Bearer ","")===a}(e))return console.warn("[Cron] Unauthorized cleanup attempt:",{ip:e.headers.get("x-forwarded-for")||e.headers.get("x-real-ip"),userAgent:e.headers.get("user-agent"),timestamp:new Date().toISOString()}),l.NextResponse.json({error:"Unauthorized"},{status:401});console.log("[Cron] Starting daily cleanup job...");let a=[],s=Date.now();try{let e=new Date(Date.now()-36e5),t=await c._B.user.updateMany({where:{currentChallenge:{not:null},updatedAt:{lt:e}},data:{currentChallenge:null}});a.push({task:"expired_webauthn_challenges",itemsDeleted:t.count,timeTakenMs:Date.now()-s,success:!0})}catch(e){a.push({task:"expired_webauthn_challenges",itemsDeleted:0,timeTakenMs:Date.now()-s,success:!1,error:e.message})}let n=Date.now();try{let e=new Date(Date.now()-7776e6),t=await c._B.auditLog.deleteMany({where:{createdAt:{lt:e}}});a.push({task:"old_audit_logs",itemsDeleted:t.count,timeTakenMs:Date.now()-n,success:!0})}catch(e){a.push({task:"old_audit_logs",itemsDeleted:0,timeTakenMs:Date.now()-n,success:!1,error:e.message})}let r=Date.now();try{let e=new Date(Date.now()-6048e5),t=await c._B.transaction.deleteMany({where:{status:"failed",createdAt:{lt:e}}});a.push({task:"failed_transactions",itemsDeleted:t.count,timeTakenMs:Date.now()-r,success:!0})}catch(e){a.push({task:"failed_transactions",itemsDeleted:0,timeTakenMs:Date.now()-r,success:!1,error:e.message})}let o=Date.now();try{let e=await c._B.webauthnCredential.deleteMany({where:{user:{isActive:!1,deletedAt:{not:null}}}});a.push({task:"orphaned_webauthn_credentials",itemsDeleted:e.count,timeTakenMs:Date.now()-o,success:!0})}catch(e){a.push({task:"orphaned_webauthn_credentials",itemsDeleted:0,timeTakenMs:Date.now()-o,success:!1,error:e.message})}let d=Date.now();try{let e=new Date(Date.now()-31536e6),t=await c._B.transaction.updateMany({where:{status:"completed",completedAt:{lt:e}},data:{metadata:i.Prisma.DbNull}});a.push({task:"clear_old_transaction_metadata",itemsDeleted:t.count,timeTakenMs:Date.now()-d,success:!0})}catch(e){a.push({task:"clear_old_transaction_metadata",itemsDeleted:0,timeTakenMs:Date.now()-d,success:!1,error:e.message})}let p=Date.now();try{process.env.DATABASE_URL?.includes("postgres")&&console.log("[Cron] Database maintenance tasks would run here"),a.push({task:"database_maintenance",itemsDeleted:0,timeTakenMs:Date.now()-p,success:!0})}catch(e){a.push({task:"database_maintenance",itemsDeleted:0,timeTakenMs:Date.now()-p,success:!1,error:e.message})}let m=Date.now()-t,h=a.reduce((e,t)=>e+t.itemsDeleted,0),w=a.filter(e=>!e.success);return console.log("[Cron] Daily cleanup completed:",{totalItemsDeleted:h,totalTimeTakenMs:m,tasksRun:a.length,tasksSuccessful:a.length-w.length,tasksFailed:w.length,timestamp:new Date().toISOString()}),w.length>0&&u.Rc.captureException(Error(`Cleanup job had ${w.length} failed tasks`),{extra:{failedTasks:w},tags:{job:"daily_cleanup"}}),u.Rc.trackPerformanceMetric("daily_cleanup",m,{success:0===w.length,items_deleted:h,tasks_run:a.length}),l.NextResponse.json({success:!0,message:"Daily cleanup completed",summary:{totalItemsDeleted:h,totalTimeTakenMs:m,tasksRun:a.length,tasksSuccessful:a.length-w.length,tasksFailed:w.length},details:a,timestamp:new Date().toISOString()})}catch(a){let e=Date.now()-t;return console.error("[Cron] Daily cleanup failed:",a),u.Rc.captureException(a,{extra:{duration:e,context:"daily_cleanup_cron"},tags:{job:"daily_cleanup"}}),l.NextResponse.json({success:!1,error:"Cleanup job failed",message:a.message,timestamp:new Date().toISOString()},{status:500})}}async function m(){return l.NextResponse.json({error:"Method not allowed"},{status:405})}async function h(){return l.NextResponse.json({error:"Method not allowed"},{status:405})}async function w(){return l.NextResponse.json({error:"Method not allowed"},{status:405})}let D=new n.AppRouteRouteModule({definition:{kind:r.x.APP_ROUTE,page:"/api/cron/cleanup/route",pathname:"/api/cron/cleanup",filename:"route",bundlePath:"app/api/cron/cleanup/route"},resolvedPagePath:"/Users/davicho/MASTER proyectos/FacePay/src/app/api/cron/cleanup/route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:g,staticGenerationAsyncStorage:k,serverHooks:_}=D,y="/api/cron/cleanup/route";function M(){return(0,o.patchFetch)({serverHooks:_,staticGenerationAsyncStorage:k})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),s=t.X(0,[8948,5972,7],()=>a(43854));module.exports=s})();